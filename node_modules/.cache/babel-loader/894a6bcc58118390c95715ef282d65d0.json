{"ast":null,"code":"var _jsxFileName = \"/home/kat/habi/repos/react/front-dagster/src/layouts/Router/components/Auth/AuthenticatedRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    authorizedRoles\n  } = _ref;\n  const {\n    isAuthenticated\n  } = useSelector(state => state.loginData);\n  const data = {\n    role: [\"admin\"]\n  };\n\n  const isAuthorized = () => {\n    let authorized = false;\n\n    if (authorizedRoles) {\n      data.role.forEach(role => {\n        if (authorizedRoles.some(authorizedRole => authorizedRole === role)) {\n          authorized = true;\n        }\n      });\n    } else {\n      authorized = true;\n    }\n\n    return authorized;\n  };\n\n  return isAuthenticated ? isAuthorized() ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: `/`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: `/`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthenticatedRoute, \"TPD1adLOrTdsrr/HMWf3CuTzU0I=\", false, function () {\n  return [useSelector];\n});\n\n_c = AuthenticatedRoute;\nexport { AuthenticatedRoute };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"names":["React","useSelector","Navigate","AuthenticatedRoute","component","Component","authorizedRoles","isAuthenticated","state","loginData","data","role","isAuthorized","authorized","forEach","some","authorizedRole"],"sources":["/home/kat/habi/repos/react/front-dagster/src/layouts/Router/components/Auth/AuthenticatedRoute.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst AuthenticatedRoute = ({ component: Component, authorizedRoles }) => {\n    const { isAuthenticated } = useSelector((state) => state.loginData);\n\n    const data = { role: [\"admin\"] };\n\n    const isAuthorized = () => {\n        let authorized = false;\n        if (authorizedRoles) {\n            data.role.forEach((role) => {\n                if (authorizedRoles.some((authorizedRole) => authorizedRole === role)) {\n                    authorized = true;\n                }\n            });\n        } else {\n            authorized = true;\n        }\n        return authorized;\n    };\n\n    return isAuthenticated ? (\n        isAuthorized() ? (\n            <Component />\n        ) : (\n            <Navigate to={`/`} />\n        )\n    ) : (\n        <Navigate to={`/`} />\n    );\n};\n\nexport { AuthenticatedRoute };\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,kBAAkB,GAAG,QAA+C;EAAA;;EAAA,IAA9C;IAAEC,SAAS,EAAEC,SAAb;IAAwBC;EAAxB,CAA8C;EACtE,MAAM;IAAEC;EAAF,IAAsBN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAAvC;EAEA,MAAMC,IAAI,GAAG;IAAEC,IAAI,EAAE,CAAC,OAAD;EAAR,CAAb;;EAEA,MAAMC,YAAY,GAAG,MAAM;IACvB,IAAIC,UAAU,GAAG,KAAjB;;IACA,IAAIP,eAAJ,EAAqB;MACjBI,IAAI,CAACC,IAAL,CAAUG,OAAV,CAAmBH,IAAD,IAAU;QACxB,IAAIL,eAAe,CAACS,IAAhB,CAAsBC,cAAD,IAAoBA,cAAc,KAAKL,IAA5D,CAAJ,EAAuE;UACnEE,UAAU,GAAG,IAAb;QACH;MACJ,CAJD;IAKH,CAND,MAMO;MACHA,UAAU,GAAG,IAAb;IACH;;IACD,OAAOA,UAAP;EACH,CAZD;;EAcA,OAAON,eAAe,GAClBK,YAAY,kBACR,QAAC,SAAD;IAAA;IAAA;IAAA;EAAA,QADQ,gBAGR,QAAC,QAAD;IAAU,EAAE,EAAG;EAAf;IAAA;IAAA;IAAA;EAAA,QAJc,gBAOlB,QAAC,QAAD;IAAU,EAAE,EAAG;EAAf;IAAA;IAAA;IAAA;EAAA,QAPJ;AASH,CA5BD;;GAAMT,kB;UAC0BF,W;;;KAD1BE,kB;AA8BN,SAASA,kBAAT"},"metadata":{},"sourceType":"module"}